from sqlite3 import connect
import pandas as pd
import json

class Handler:
    """基类，定义数据库路径的getter和setter"""
    def __init__(self, dbPathOrUrl=None):
        self.dbPathOrUrl = dbPathOrUrl
    
    def getDbPathOrUrl(self):
        return self.dbPathOrUrl
    
    def setDbPathOrUrl(self, pathOrUrl):
        if pathOrUrl:
            self.dbPathOrUrl = pathOrUrl
            return True
        return False

class CategoryUploadHandler(Handler):
    """分类数据上传处理器"""
    def __init__(self, dbPathOrUrl=None):
        super().__init__(dbPathOrUrl)
    
    def pushDataToDb(self, path):
        """将JSON数据推送到数据库"""
        if not path.endswith(".json"):
            return False
        
        try:
            # 读取JSON数据
            with open(path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # 准备数据结构
            categories_list = []
            areas_list = []
            
            # 处理每条记录
            for item in data:
                # 提取并处理分类信息
                for category in item.get('categories', []):
                    category_name = category.get('id', 'Unknown')
                    quartile = category.get('quartile', None)
                    
                    categories_list.append({
                        'category_name': category_name,
                        'quartile': quartile
                    })
                
                # 提取并处理领域信息
                for area in item.get('areas', []):
                    areas_list.append({
                        'area_name': area
                    })
            
            # 转换为DataFrame
            categories_df = pd.DataFrame(categories_list).drop_duplicates()
            areas_df = pd.DataFrame(areas_list).drop_duplicates()
            
            # 写入数据库
            with connect(self.dbPathOrUrl) as con:
                # 创建分类表
                con.execute("""
                CREATE TABLE IF NOT EXISTS categories (
                    category_id INTEGER PRIMARY KEY AUTOINCREMENT,
                    category_name TEXT NOT NULL UNIQUE,
                    quartile TEXT
                )
                """)
                
                # 创建领域表
                con.execute("""
                CREATE TABLE IF NOT EXISTS areas (
                    area_id INTEGER PRIMARY KEY AUTOINCREMENT,
                    area_name TEXT NOT NULL UNIQUE
                )
                """)
                
                # 插入数据
                categories_df.to_sql("categories", con, if_exists="replace", index=False)
                areas_df.to_sql("areas", con, if_exists="replace", index=False)
                con.commit()
            
            return True
        
        except Exception as e:
            print(f"数据处理错误: {str(e)}")
            return False
